// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as List        from "bs-platform/lib/es6/list.js";
import * as $$Array     from "bs-platform/lib/es6/array.js";
import * as Block       from "bs-platform/lib/es6/block.js";
import * as Curry       from "bs-platform/lib/es6/curry.js";
import * as Gyges       from "./gyges.bs.js";
import * as $$String    from "bs-platform/lib/es6/string.js";
import * as Tea_app     from "bucklescript-tea/src/tea_app.js";
import * as Caml_obj    from "bs-platform/lib/es6/caml_obj.js";
import * as Tea_html    from "bucklescript-tea/src/tea_html.js";
import * as Caml_array  from "bs-platform/lib/es6/caml_array.js";
import * as Caml_int32  from "bs-platform/lib/es6/caml_int32.js";
import * as Pervasives  from "bs-platform/lib/es6/pervasives.js";
import * as Caml_string from "bs-platform/lib/es6/caml_string.js";

function choix(param_0) {
  return /* Choix */Block.__(1, [param_0]);
}

var original = /* array */[
  "‚óè",
  "‚óã",
  "‚óé",
  "üûã"
];

var defaut = /* array */[
  "Ÿ†",
  "Ÿ°",
  "Ÿ¢",
  "Ÿ£"
];

var chiffre = /* array */[
  ".",
  "1",
  "2",
  "3"
];

function init_jeu() {
  return /* [] */0;
}

function ajout_cle(f, cle, valeur, x) {
  if (Caml_obj.caml_equal(x, cle)) {
    return valeur;
  } else {
    return Curry._1(f, x);
  }
}

function cle_ajout(cle, valeur, f) {
  return (function (param) {
      return ajout_cle(f, cle, valeur, param);
    });
}

function ajout(f, p) {
  var v = p[1];
  var k = p[0];
  return (function (param) {
      return ajout_cle(f, k, v, param);
    });
}

var encours = List.map((function (param) {
        var match = param[0];
        return /* tuple */[
                /* Case */[
                  match[0],
                  match[1]
                ],
                /* Val */[param[1]]
              ];
      }), /* :: */[
      /* tuple */[
        /* tuple */[
          1,
          1
        ],
        3
      ],
      /* :: */[
        /* tuple */[
          /* tuple */[
            3,
            1
          ],
          1
        ],
        /* :: */[
          /* tuple */[
            /* tuple */[
              4,
              1
            ],
            3
          ],
          /* :: */[
            /* tuple */[
              /* tuple */[
                6,
                1
              ],
              1
            ],
            /* :: */[
              /* tuple */[
                /* tuple */[
                  4,
                  2
                ],
                2
              ],
              /* :: */[
                /* tuple */[
                  /* tuple */[
                    3,
                    3
                  ],
                  2
                ],
                /* :: */[
                  /* tuple */[
                    /* tuple */[
                      5,
                      3
                    ],
                    3
                  ],
                  /* :: */[
                    /* tuple */[
                      /* tuple */[
                        3,
                        4
                      ],
                      3
                    ],
                    /* :: */[
                      /* tuple */[
                        /* tuple */[
                          1,
                          6
                        ],
                        1
                      ],
                      /* :: */[
                        /* tuple */[
                          /* tuple */[
                            3,
                            6
                          ],
                          2
                        ],
                        /* :: */[
                          /* tuple */[
                            /* tuple */[
                              4,
                              6
                            ],
                            1
                          ],
                          /* :: */[
                            /* tuple */[
                              /* tuple */[
                                5,
                                6
                              ],
                              2
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

function pions(config, p) {
  var parray = config.split("");
  if (p) {
    return Caml_array.caml_array_get(parray, p[0]);
  } else {
    return Caml_array.caml_array_get(parray, 0);
  }
}

function string_vers_array(str) {
  var n = str.length;
  var rep = Caml_array.caml_make_vect(n, "");
  for(var i = 0; i <= n; ++i){
    Caml_array.caml_array_set(rep, i, $$String.make(1, Caml_string.get(str, i)));
  }
  return rep;
}

function init() {
  return /* record */[
          /* partie */encours,
          /* joueur : Sud */1,
          /* pions */original,
          /* desc : false */0,
          /* choixprem : None */0,
          /* choixdeux : None */0,
          /* message */""
        ];
}

function case_vers_string($$case) {
  if ($$case) {
    var $$case$1 = $$case[0];
    if (typeof $$case$1 === "number") {
      if ($$case$1 !== 0) {
        return "case Sud";
      } else {
        return "case Nord";
      }
    } else {
      return " case (" + (String($$case$1[0]) + ("," + (String($$case$1[1]) + ")")));
    }
  } else {
    return "aucune case s√©lectionn√©e";
  }
}

function update(model, param) {
  if (typeof param === "number") {
    if (param) {
      var x = model[/* pions */2];
      var nou = Caml_obj.caml_equal(x, original) ? defaut : original;
      var newrecord = model.slice();
      newrecord[/* pions */2] = nou;
      return newrecord;
    } else {
      var newrecord$1 = model.slice();
      newrecord$1[/* desc */3] = 1 - model[/* desc */3];
      return newrecord$1;
    }
  } else if (param.tag) {
    var $$case = param[0];
    var match = model[/* choixprem */4];
    if (match) {
      var prem = match[0];
      if (Caml_obj.caml_equal(/* Some */[$$case], model[/* choixprem */4])) {
        var newrecord$2 = model.slice();
        newrecord$2[/* choixprem */4] = /* None */0;
        return newrecord$2;
      } else if (List.exists((function (x) {
                return Caml_obj.caml_equal(x, $$case);
              }), Gyges.depl_possibles(model[/* partie */0], prem))) {
        if (typeof $$case === "number") {
          if ($$case !== 0) {
            return /* record */[
                    /* partie */Gyges.init_jeu(/* () */0),
                    /* joueur */model[/* joueur */1],
                    /* pions */model[/* pions */2],
                    /* desc */model[/* desc */3],
                    /* choixprem : None */0,
                    /* choixdeux */model[/* choixdeux */5],
                    /* message */"Nord a gagn√©"
                  ];
          } else {
            return /* record */[
                    /* partie */Gyges.init_jeu(/* () */0),
                    /* joueur */model[/* joueur */1],
                    /* pions */model[/* pions */2],
                    /* desc */model[/* desc */3],
                    /* choixprem : None */0,
                    /* choixdeux */model[/* choixdeux */5],
                    /* message */"Sud a gagn√©"
                  ];
          }
        } else {
          return /* record */[
                  /* partie */Gyges.mise_a_jour(model[/* partie */0], /* tuple */[
                        prem,
                        $$case
                      ]),
                  /* joueur */model[/* joueur */1] === /* Sud */1 ? /* Nord */0 : /* Sud */1,
                  /* pions */model[/* pions */2],
                  /* desc */model[/* desc */3],
                  /* choixprem : None */0,
                  /* choixdeux : Some */[$$case],
                  /* message */"deuxieme choix: " + case_vers_string(/* Some */[$$case])
                ];
        }
      } else {
        var newrecord$3 = model.slice();
        newrecord$3[/* message */6] = "Case inacessible";
        return newrecord$3;
      }
    } else if (List.exists((function (x) {
              return Caml_obj.caml_equal(x, $$case);
            }), Gyges.departs_possibles(model[/* partie */0], model[/* joueur */1]))) {
      return /* record */[
              /* partie */model[/* partie */0],
              /* joueur */model[/* joueur */1],
              /* pions */model[/* pions */2],
              /* desc */model[/* desc */3],
              /* choixprem : Some */[$$case],
              /* choixdeux */model[/* choixdeux */5],
              /* message */"premier choix: " + case_vers_string(/* Some */[$$case])
            ];
    } else {
      var newrecord$4 = model.slice();
      newrecord$4[/* message */6] = "Choix invalide";
      return newrecord$4;
    }
  } else {
    var newrecord$5 = model.slice();
    newrecord$5[/* pions */2] = string_vers_array(param[0]);
    return newrecord$5;
  }
}

function view_button(title, msg) {
  return Tea_html.button(/* None */0, /* None */0, /* :: */[
              Tea_html.onClick(msg),
              /* [] */0
            ], /* :: */[
              Tea_html.text(title),
              /* [] */0
            ]);
}

var ascii_titre = "\n         _    _        _          _              _           _        \n        /\\ \\ /\\ \\     /\\_\\       /\\ \\           /\\ \\        / /\\      \n       /  \\ \\\\ \\ \\   / / /      /  \\ \\         /  \\ \\      / /  \\     \n      / /\\ \\_\\\\ \\ \\_/ / /      / /\\ \\_\\       / /\\ \\ \\    / / /\\ \\__  \n     / / /\\/_/ \\ \\___/ /      / / /\\/_/      / / /\\ \\_\\  / / /\\ \\___\\ \n    / / / ______\\ \\ \\_/      / / / ______   / /_/_ \\/_/  \\ \\ \\ \\/___/ \n   / / / /\\_____\\\\ \\ \\      / / / /\\_____\\ / /____/\\      \\ \\ \\       \n  / / /  \\/____ / \\ \\ \\    / / /  \\/____ // /\\____\\/  _    \\ \\ \\      \n / / /_____/ / /   \\ \\ \\  / / /_____/ / // / /______ /_/\\__/ / /      \n/ / /______\\/ /     \\ \\_\\/ / /______\\/ // / /_______\\\\ \\/___/ /       \n\\/___________/       \\/_/\\/___________/ \\/__________/ \\_____\\/        ";

var style_item = Tea_html.styles(/* :: */[
      /* tuple */[
        "padding",
        "5px"
      ],
      /* [] */0
    ]);

var menu = Tea_html.div(/* None */0, /* None */0, /* :: */[
      Tea_html.style("margin", "20px"),
      /* [] */0
    ], /* :: */[
      Tea_html.span(/* None */0, /* None */0, /* :: */[
            style_item,
            /* [] */0
          ], /* :: */[
            Tea_html.text("Description"),
            /* [] */0
          ]),
      /* :: */[
        Tea_html.span(/* None */0, /* None */0, /* :: */[
              style_item,
              /* [] */0
            ], /* :: */[
              Tea_html.text("R√®gles"),
              /* [] */0
            ]),
        /* :: */[
          Tea_html.span(/* None */0, /* None */0, /* :: */[
                style_item,
                /* [] */0
              ], /* :: */[
                Tea_html.text("Config"),
                /* [] */0
              ]),
          /* [] */0
        ]
      ]
    ]);

function donne_position(cote, param) {
  var intervalle = cote / 8 | 0;
  return /* tuple */[
          Caml_int32.imul(intervalle, param[0]),
          Caml_int32.imul(intervalle, 7 - param[1] | 0)
        ];
}

var max_size = Pervasives.max(window.innerWidth, window.innerHeight);

function val_de_pion(p) {
  if (p) {
    return p[0];
  } else {
    return 0;
  }
}

function vers_pix(n) {
  return Pervasives.string_of_int(n) + "px";
}

function grille_liste(m, n) {
  var range = function (i, j) {
    var match = j - i | 0;
    if (match !== 0) {
      return /* :: */[
              i,
              range(i + 1 | 0, j)
            ];
    } else {
      return /* [] */0;
    }
  };
  return List.flatten(List.map((function (y) {
                    return List.map((function (x) {
                                  return /* tuple */[
                                          x,
                                          y
                                        ];
                                }), range(m, n + 1 | 0));
                  }), range(m, n + 1 | 0)));
}

function vue_plateau(model) {
  var jeu = model[/* partie */0];
  var str = model[/* pions */2];
  var prem = model[/* choixprem */4];
  var cote = Pervasives.min(Pervasives.min(window.innerWidth, window.innerHeight) / 2 | 0, 600);
  var carre = grille_liste(1, 6);
  var intervalle = cote / 8 | 0;
  var fait_case = function (x, y, $$case) {
    return Tea_html.span(/* None */0, /* None */0, /* :: */[
                Tea_html.onClick(/* Choix */Block.__(1, [$$case])),
                /* :: */[
                  Caml_obj.caml_equal(prem, /* Some */[$$case]) ? Tea_html.class$prime("case-active") : Tea_html.class$prime("case-inactive"),
                  /* :: */[
                    Tea_html.styles(/* :: */[
                          /* tuple */[
                            "left",
                            Pervasives.string_of_int(x) + "px"
                          ],
                          /* :: */[
                            /* tuple */[
                              "top",
                              Pervasives.string_of_int(y) + "px"
                            ],
                            /* :: */[
                              /* tuple */[
                                "width",
                                Pervasives.string_of_int(intervalle) + "px"
                              ],
                              /* :: */[
                                /* tuple */[
                                  "height",
                                  Pervasives.string_of_int(intervalle) + "px"
                                ],
                                /* :: */[
                                  /* tuple */[
                                    "font-size",
                                    Pervasives.string_of_int(Caml_int32.imul(intervalle, 3) / 4 | 0) + "px"
                                  ],
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]
                        ]),
                    /* [] */0
                  ]
                ]
              ], /* :: */[
                Tea_html.text(Caml_array.caml_array_get(str, val_de_pion(Gyges.pion_dans_case(jeu, $$case)))),
                /* [] */0
              ]);
  };
  var appel = function (param) {
    var y = param[1];
    var x = param[0];
    var match = donne_position(cote, /* tuple */[
          x,
          y
        ]);
    return fait_case(match[0], match[1], /* Case */[
                x,
                y
              ]);
  };
  var nord = fait_case((cote - intervalle | 0) / 2 | 0, 0, /* CaseNord */0);
  var sud = fait_case((cote - intervalle | 0) / 2 | 0, cote - intervalle | 0, /* CaseSud */1);
  return Tea_html.div(/* None */0, /* None */0, /* :: */[
              Tea_html.class$prime("plateau"),
              /* :: */[
                Tea_html.styles(/* :: */[
                      /* tuple */[
                        "width",
                        Pervasives.string_of_int(cote) + "px"
                      ],
                      /* :: */[
                        /* tuple */[
                          "height",
                          Pervasives.string_of_int(cote) + "px"
                        ],
                        /* [] */0
                      ]
                    ]),
                /* [] */0
              ]
            ], /* :: */[
              Tea_html.div(/* None */0, /* None */0, /* :: */[
                    Tea_html.class$prime("bord-plateau"),
                    /* [] */0
                  ], /* :: */[
                    Tea_html.text(""),
                    /* [] */0
                  ]),
              /* :: */[
                nord,
                /* :: */[
                  sud,
                  List.map(appel, carre)
                ]
              ]
            ]);
}

function view(model) {
  return Tea_html.div(/* None */0, /* None */0, /* :: */[
              Tea_html.styles(/* :: */[
                    /* tuple */[
                      "max-width",
                      "800px"
                    ],
                    /* :: */[
                      /* tuple */[
                        "margin",
                        "auto"
                      ],
                      /* :: */[
                        /* tuple */[
                          "background-color",
                          "#ccc"
                        ],
                        /* [] */0
                      ]
                    ]
                  ]),
              /* [] */0
            ], /* :: */[
              Tea_html.h3(/* None */0, /* None */0, /* :: */[
                    Tea_html.onClick(/* ToggleDesc */0),
                    /* :: */[
                      Tea_html.styles(/* :: */[
                            /* tuple */[
                              "text-align",
                              "center"
                            ],
                            /* [] */0
                          ]),
                      /* [] */0
                    ]
                  ], /* :: */[
                    Tea_html.pre(/* None */0, /* None */0, /* :: */[
                          Tea_html.styles(/* :: */[
                                /* tuple */[
                                  "margin",
                                  "auto"
                                ],
                                /* :: */[
                                  /* tuple */[
                                    "font-size",
                                    "8px"
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      "font-weight",
                                      "bold"
                                    ],
                                    /* [] */0
                                  ]
                                ]
                              ]),
                          /* [] */0
                        ], /* :: */[
                          Tea_html.text(ascii_titre),
                          /* [] */0
                        ]),
                    /* :: */[
                      menu,
                      /* [] */0
                    ]
                  ]),
              /* :: */[
                model[/* desc */3] ? Tea_html.p(/* None */0, /* None */0, /* [] */0, /* :: */[
                        Tea_html.text("Description de Gyges"),
                        /* [] */0
                      ]) : Tea_html.noNode,
                /* :: */[
                  Tea_html.span(/* None */0, /* None */0, /* :: */[
                        Tea_html.style("font_size", "20px"),
                        /* [] */0
                      ], /* :: */[
                        Tea_html.text($$String.concat(" ", $$Array.to_list(model[/* pions */2]))),
                        /* [] */0
                      ]),
                  /* :: */[
                    Tea_html.button(/* None */0, /* None */0, /* :: */[
                          Tea_html.onClick(/* ChangePions */1),
                          /* [] */0
                        ], /* :: */[
                          Tea_html.text("Change les pions"),
                          /* [] */0
                        ]),
                    /* :: */[
                      vue_plateau(model),
                      /* :: */[
                        Tea_html.p(/* None */0, /* None */0, /* [] */0, /* :: */[
                              Tea_html.text(model[/* message */6]),
                              /* [] */0
                            ]),
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var partial_arg_000 = /* model : record */[
  /* partie */encours,
  /* joueur : Sud */1,
  /* pions */original,
  /* desc : false */0,
  /* choixprem : None */0,
  /* choixdeux : None */0,
  /* message */""
];

var partial_arg = /* record */[
  partial_arg_000,
  /* update */update,
  /* view */view
];

function main(param, param$1) {
  return Tea_app.beginnerProgram(partial_arg, param, param$1);
}

var toggleDesc = /* ToggleDesc */0;

var changePions = /* ChangePions */1;

var test = /* [] */0;

export {
  toggleDesc        ,
  changePions       ,
  choix             ,
  original          ,
  defaut            ,
  chiffre           ,
  init_jeu          ,
  test              ,
  ajout_cle         ,
  cle_ajout         ,
  ajout             ,
  encours           ,
  pions             ,
  string_vers_array ,
  init              ,
  case_vers_string  ,
  update            ,
  view_button       ,
  ascii_titre       ,
  style_item        ,
  menu              ,
  donne_position    ,
  max_size          ,
  val_de_pion       ,
  vers_pix          ,
  grille_liste      ,
  vue_plateau       ,
  view              ,
  main              ,
  
}
/* encours Not a pure module */
